---
title: How CI/CD Enhances the Development of R Packages in the Pharmaverse
subtitle: |
  PhUSE 2023, US Connect

  March 7th, 2023

  Ben Straub (GSK) & Dinakar Kulkarni (Roche)
execute:
  echo: false
  warning: false
  error: false
  eval: true
  output: asis
  comment: ''
format:
  pptx:
    incremental: true
  revealjs:
    slide-number: true
    chalkboard:
      buttons: false
    preview-links: auto
    logo: https://avatars.githubusercontent.com/u/84541169
    footer: <[CI-CD GitHub](https://github.com/phuse-org/cicd.phuse.2023)>
    theme: [simple, custom.scss]
    from: markdown+emoji
    link-external-icon: true
    link-external-newwindow: true
---

```{r}
render_file <- function(filepath, language = "yaml") {
  cat(paste0("```", language, "\n"))
  cat(readLines(filepath), sep = "\n")
  cat("```\n")
}
```


## What is CI/CD? 


::: {.fragment}
* Continuous Integration (CI): Frequent merging of several small changes into a main branch
:::

::: {.fragment}
* Continuous Delivery (CD): Repeatable deployment process when deciding to deploy
:::

::: {.fragment}
CI/CD bridges the gaps between development and operation activities and teams by **enforcing automation** in building, testing and deployment of applications. CI/CD services compile the incremental code changes made by developers, then link and package them into software deliverables
:::

::: {.columns}
::: {.column width="50%"}
::: {.centre}
::: {.fragment}
![](images/cicd.jpg)
:::
:::
:::

::: {.column width="50%"}
::: {.centre}
::: {.fragment}
![](images/pharmaverse.png)
:::
:::
:::
:::


::: footer
[Wikipedia: CI/CD](https://en.wikipedia.org/wiki/CI/CD#cite_note-2) [{pharmaverse}](https://github.com/pharmaverse)
:::

## Does it help?

<div class="centre">
![](images/automation.png)
</div>


::: {.fragment}
...Yes!  Yes, it does!!
:::

::: footer
[XKCD](https://xkcd.com/1319/)
:::

## How does CI/CD help R packages?

::: {.incremental}
- Catch issues (bugs) early on 
- User base on multiple OSes and multiple R versions
- Faster turnaround on Code Review
- Multiple Contributors on your R Package
- Enforce style conventions and preferences 
- Measure test coverage for new code 
- Keep docs up-to-date
- And we can just keep going!
:::

<!-- TODO add standard package logo or something -->

::: {.column width="100%" .fragment}
We covered a lot of custom CI/CD actions for R packages in the R/Pharma Workshop in 2022: [Intro to CI/CD for R Packages](https://youtu.be/OcNzurpCCpY)
:::


# Two Case Studies

::: {.column width="40%"}
![](https://raw.githubusercontent.com/insightsengineering/hex-stickers/main/thumbs/admiral)
:::

::: {.column width="40%"}
![](https://raw.githubusercontent.com/insightsengineering/hex-stickers/main/thumbs/nest.png)
:::

# Case Study - admiral

## About admiral
<br/>

:::: {.columns}

::: {.column width="75%"}
- Provide an open source, modularized toolbox that enables the pharmaceutical programming community to develop ADaM datasets in R.<br/>
- ADaM is one of the required standards for data submission to FDA (U.S.) and PMDA (Japan) for clinical trials
- Links
  - [CDISC](https://www.cdisc.org/)
  - [https://github.com/pharmaverse/admiral](https://github.com/pharmaverse/admiral)
- **Issue 1:**  Checking ADaM Template code
- **Issue 2:**  Common CI/CD workflows for the `admiral` family of packages
:::

::: {.column width="25%"}
![](images/hex-admiral.png)
:::
::::


## Issue 1 - How to Check our Template Code

:::: {.columns}

::: {.column width="40%" .incremental}
- Create a reference files to build common ADaM datasets that shows users how to implement our functions
- Way less text than a Vignette - Code is ready to go and build a dataset
- Where we store this code is not checked by R-CMD
- How to ensure code stays up to date with deprecated functions or unforeseen bugs get in from functions working together?
- CI/CD for the win!
:::

::: {.column width="10%"}
:::

::: {.column width="50%"}
![](images/templates.png)
:::
::::

## Solution 1 - CI/CD for Templates

:::: {.columns}

::: {.column width="50%" .incremental}
- Dedicated CI/CD workflow that executes the Template code
- Once a Code Review is completed the `Check Template` Workflow is executed
- If any errors or warnings are detected the CI/CD check fails and the contributor must fix the error or warning.
:::

::: {.column width="50%"}

::: {.file-name}
.github/workflows/check-templates.yml
:::

![](images/check_templates.png)
:::
::::

## Issue 2 - admiral upstream and downstream dependencies

:::: {.columns}

::: {.column width="40%" .incremental}
- As you can imagine there can be a lot of different types of ADaMs!
- Extension packages focus on specific disease areas like oncology
- The `admiral` family has a package for developers, template R package repo and dummy data
- Eek!!  How to keep this all in line!
:::



::: {.column width="60%"}
![](images/admiralext.png)
:::
:::

## Solution 2 - Common CI/CD workflows for admiral upstream and downstream dependencies

:::: {.columns}

::: {.column width="40%"}
- Using `admiralci`, we have a common set of CI/CD workflows
- Developers moving between packages are familiar with these workflows
- Common documentation between packages for CI/CD workflows - easy to maintain and provide to new contributors
:::

::: {.column width="10%"}
:::

::: {.column width="50%"}
![](images/admiralci.png)
:::
:::



# Case Study - NEST

## About NEST
<br/>

:::: {.columns}

::: {.column width="75%"}
- A collection of R packages for creating TLGs/TFLs and exploratory clinical trials data visualization<br/>
- `tern` for creating TLGs<br/>
- `teal` for creating exploratory web applications for analyzing clinical trial data<br/>
- Links
  - [rtables](https://github.com/Roche/rtables)
  - [NEST GitHub Organization](https://github.com/insightsengineering/)
:::

::: {.column width="25%"}
![](https://raw.githubusercontent.com/insightsengineering/hex-stickers/main/thumbs/nest.png)
:::
::::

## Use Case 1 - Integration Testing

<br/>


- An in-development package must be tested against the latest versions of upstream dependencies
- Monorepo emulation via a git branch naming strategy is achieved by using
  - the [staged.dependencies R package](https://github.com/openpharma/staged.dependencies)
  - and the [staged.dependencies GitHub Action](https://github.com/insightsengineering/staged-dependencies-action)
- Testing as a cohort can be done at any stage (eg. development, pre-release, release)



::: {.centre}
<img
  src="https://raw.githubusercontent.com/insightsengineering/hex-stickers/main/thumbs/staged.dependencies.png" 
  width="175" 
  height="175"
/>
:::


## Use Case 2 - Web Application Testing & Deployment

<br/>

:::: {.columns}

::: {.column width="45%"}

- Analysts create Shiny web apps via the `teal` framework for analyzing data
- Apps are tested via a CI pipeline that uses the [`shinytest2`](https://cran.r-project.org/web/packages/shinytest2/index.html) R package
- Apps deployed to an Posit Connect Server instance via a CD pipeline
  - With the help of the [`rsconnect`](https://cran.r-project.org/web/packages/rsconnect/index.html) and [`connectapi`](https://cran.r-project.org/web/packages/connectapi/index.html) R packages

:::

::: {.column width="5%"}
:::

::: {.column width="50%"}

![](images/shinytest2.png)

:::

::::

## Use Case 3 - Validating R Packages

<br/>

:::: {.columns}

::: {.column width="60%"}

- R packages are validated by an internal validation team that uses CI/CD pipelines to automatically
  - accept new package submissions via a form
  - running tests against the new package to ensure package integrity
  - enforcing criteria to ensure that the package meets regulatory requirements
- Also validated externally via an open source project called [thevalidatoR](https://github.com/insightsengineering/thevalidatoR)

:::

::: {.column width="40%"}

![](images/validation-report.png)

:::

::::

## Additional Materials
<br/>

- Further Reading
  - [GitHub Actions](https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions)
  - [GitLab CI](https://docs.gitlab.com/ee/ci/)
- Advanced Examples
  - [r-lib/actions](https://github.com/r-lib/actions)
  - [`{admiralci}`](https://github.com/pharmaverse/admiralci)
  - [Docker](https://www.docker.com/)
- Presentation built with [Quarto](https://quarto.org/)

- [R/Pharma 2022 CI/CD Workshop](https://pharmaverse.github.io/cicdworkshop.rinpharma2022/workshop/)
- [This Presentation](https://pharmaverse.github.io/cicdworkshop.rinpharma2022/presentation/)
